"use strict";(self.webpackChunk_mll_lab_react_components=self.webpackChunk_mll_lab_react_components||[]).push([[2378],{"./node_modules/antd/lib/tree-select/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js"),_typeof=__webpack_require__("./node_modules/@babel/runtime/helpers/typeof.js");exports.ZP=void 0;var _extends2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/extends.js")),_defineProperty2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/defineProperty.js")),React=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_rcTreeSelect=_interopRequireWildcard(__webpack_require__("./node_modules/rc-tree-select/es/index.js")),_classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_omit=_interopRequireDefault(__webpack_require__("./node_modules/rc-util/lib/omit.js")),_configProvider=__webpack_require__("./node_modules/antd/lib/config-provider/index.js"),_iconUtil=(_interopRequireDefault(__webpack_require__("./node_modules/antd/lib/_util/warning.js")),_interopRequireDefault(__webpack_require__("./node_modules/antd/lib/select/utils/iconUtil.js"))),_iconUtil2=_interopRequireDefault(__webpack_require__("./node_modules/antd/lib/tree/utils/iconUtil.js")),_SizeContext=_interopRequireDefault(__webpack_require__("./node_modules/antd/lib/config-provider/SizeContext.js")),_motion=__webpack_require__("./node_modules/antd/lib/_util/motion.js"),_context=__webpack_require__("./node_modules/antd/lib/form/context.js"),_statusUtils=__webpack_require__("./node_modules/antd/lib/_util/statusUtils.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var __rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},InternalTreeSelect=function InternalTreeSelect(_a,ref){var _classNames2,mergedNotFound,customizePrefixCls=_a.prefixCls,customizeSize=_a.size,_a$bordered=_a.bordered,bordered=void 0===_a$bordered||_a$bordered,className=_a.className,treeCheckable=_a.treeCheckable,multiple=_a.multiple,_a$listHeight=_a.listHeight,listHeight=void 0===_a$listHeight?256:_a$listHeight,_a$listItemHeight=_a.listItemHeight,listItemHeight=void 0===_a$listItemHeight?26:_a$listItemHeight,placement=_a.placement,notFoundContent=_a.notFoundContent,_switcherIcon=_a.switcherIcon,treeLine=_a.treeLine,getPopupContainer=_a.getPopupContainer,dropdownClassName=_a.dropdownClassName,_a$treeIcon=_a.treeIcon,treeIcon=void 0!==_a$treeIcon&&_a$treeIcon,transitionName=_a.transitionName,_a$choiceTransitionNa=_a.choiceTransitionName,choiceTransitionName=void 0===_a$choiceTransitionNa?"":_a$choiceTransitionNa,customStatus=_a.status,showArrow=_a.showArrow,props=__rest(_a,["prefixCls","size","bordered","className","treeCheckable","multiple","listHeight","listItemHeight","placement","notFoundContent","switcherIcon","treeLine","getPopupContainer","dropdownClassName","treeIcon","transitionName","choiceTransitionName","status","showArrow"]),_React$useContext=React.useContext(_configProvider.ConfigContext),getContextPopupContainer=_React$useContext.getPopupContainer,getPrefixCls=_React$useContext.getPrefixCls,renderEmpty=_React$useContext.renderEmpty,direction=_React$useContext.direction,virtual=_React$useContext.virtual,dropdownMatchSelectWidth=_React$useContext.dropdownMatchSelectWidth,size=React.useContext(_SizeContext.default),prefixCls=getPrefixCls("select",customizePrefixCls),treePrefixCls=getPrefixCls("select-tree",customizePrefixCls),treeSelectPrefixCls=getPrefixCls("tree-select",customizePrefixCls),mergedDropdownClassName=(0,_classnames.default)(dropdownClassName,"".concat(treeSelectPrefixCls,"-dropdown"),(0,_defineProperty2.default)({},"".concat(treeSelectPrefixCls,"-dropdown-rtl"),"rtl"===direction)),isMultiple=!(!treeCheckable&&!multiple),mergedShowArrow=void 0!==showArrow?showArrow:props.loading||!isMultiple,_useContext=(0,React.useContext)(_context.FormItemInputContext),contextStatus=_useContext.status,hasFeedback=_useContext.hasFeedback,isFormItemInput=_useContext.isFormItemInput,feedbackIcon=_useContext.feedbackIcon,mergedStatus=(0,_statusUtils.getMergedStatus)(contextStatus,customStatus),_getIcons=(0,_iconUtil.default)((0,_extends2.default)((0,_extends2.default)({},props),{multiple:isMultiple,showArrow:mergedShowArrow,hasFeedback,feedbackIcon,prefixCls})),suffixIcon=_getIcons.suffixIcon,removeIcon=_getIcons.removeIcon,clearIcon=_getIcons.clearIcon;mergedNotFound=void 0!==notFoundContent?notFoundContent:renderEmpty("Select");var selectProps=(0,_omit.default)(props,["suffixIcon","itemIcon","removeIcon","clearIcon","switcherIcon"]),mergedSize=customizeSize||size,mergedClassName=(0,_classnames.default)(!customizePrefixCls&&treeSelectPrefixCls,(_classNames2={},(0,_defineProperty2.default)(_classNames2,"".concat(prefixCls,"-lg"),"large"===mergedSize),(0,_defineProperty2.default)(_classNames2,"".concat(prefixCls,"-sm"),"small"===mergedSize),(0,_defineProperty2.default)(_classNames2,"".concat(prefixCls,"-rtl"),"rtl"===direction),(0,_defineProperty2.default)(_classNames2,"".concat(prefixCls,"-borderless"),!bordered),(0,_defineProperty2.default)(_classNames2,"".concat(prefixCls,"-in-form-item"),isFormItemInput),_classNames2),(0,_statusUtils.getStatusClassNames)(prefixCls,mergedStatus,hasFeedback),className),rootPrefixCls=getPrefixCls();return React.createElement(_rcTreeSelect.default,(0,_extends2.default)({virtual,dropdownMatchSelectWidth},selectProps,{ref,prefixCls,className:mergedClassName,listHeight,listItemHeight,treeCheckable:treeCheckable?React.createElement("span",{className:"".concat(prefixCls,"-tree-checkbox-inner")}):treeCheckable,treeLine:!!treeLine,inputIcon:suffixIcon,multiple,placement:function getPlacement(){return void 0!==placement?placement:"rtl"===direction?"bottomRight":"bottomLeft"}(),removeIcon,clearIcon,switcherIcon:function switcherIcon(nodeProps){return(0,_iconUtil2.default)(treePrefixCls,_switcherIcon,treeLine,nodeProps)},showTreeIcon:treeIcon,notFoundContent:mergedNotFound,getPopupContainer:getPopupContainer||getContextPopupContainer,treeMotion:null,dropdownClassName:mergedDropdownClassName,choiceTransitionName:(0,_motion.getTransitionName)(rootPrefixCls,"",choiceTransitionName),transitionName:(0,_motion.getTransitionName)(rootPrefixCls,(0,_motion.getTransitionDirection)(placement),transitionName),showArrow:hasFeedback||showArrow}))},TreeSelect=React.forwardRef(InternalTreeSelect);TreeSelect.TreeNode=_rcTreeSelect.TreeNode,TreeSelect.SHOW_ALL=_rcTreeSelect.SHOW_ALL,TreeSelect.SHOW_PARENT=_rcTreeSelect.SHOW_PARENT,TreeSelect.SHOW_CHILD=_rcTreeSelect.SHOW_CHILD;var _default=TreeSelect;exports.ZP=_default},"./node_modules/rc-tree-select/es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SHOW_ALL:()=>SHOW_ALL,SHOW_CHILD:()=>SHOW_CHILD,SHOW_PARENT:()=>SHOW_PARENT,TreeNode:()=>es_TreeNode,default:()=>rc_tree_select_es});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),esm_typeof=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js"),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/rc-select/es/index.js"),conductUtil=__webpack_require__("./node_modules/rc-tree/es/utils/conductUtil.js"),useId=__webpack_require__("./node_modules/rc-select/es/hooks/useId.js"),useMergedState=__webpack_require__("./node_modules/rc-util/es/hooks/useMergedState.js"),KeyCode=__webpack_require__("./node_modules/rc-util/es/KeyCode.js"),useMemo=__webpack_require__("./node_modules/rc-util/es/hooks/useMemo.js"),rc_tree_es=__webpack_require__("./node_modules/rc-tree/es/index.js");const LegacyContext=react.createContext(null);const es_TreeSelectContext=react.createContext(null);function isCheckDisabled(node){return!node||node.disabled||node.disableCheckbox||!1===node.checkable}function isNil(val){return null==val}var HIDDEN_STYLE={width:0,height:0,display:"flex",overflow:"hidden",opacity:0,border:0,padding:0,margin:0},OptionList=function OptionList(_,ref){var _useBaseProps=(0,es.useBaseProps)(),prefixCls=_useBaseProps.prefixCls,multiple=_useBaseProps.multiple,searchValue=_useBaseProps.searchValue,toggleOpen=_useBaseProps.toggleOpen,open=_useBaseProps.open,notFoundContent=_useBaseProps.notFoundContent,_React$useContext=react.useContext(es_TreeSelectContext),virtual=_React$useContext.virtual,listHeight=_React$useContext.listHeight,listItemHeight=_React$useContext.listItemHeight,treeData=_React$useContext.treeData,fieldNames=_React$useContext.fieldNames,onSelect=_React$useContext.onSelect,dropdownMatchSelectWidth=_React$useContext.dropdownMatchSelectWidth,_React$useContext2=react.useContext(LegacyContext),checkable=_React$useContext2.checkable,checkedKeys=_React$useContext2.checkedKeys,halfCheckedKeys=_React$useContext2.halfCheckedKeys,treeExpandedKeys=_React$useContext2.treeExpandedKeys,treeDefaultExpandAll=_React$useContext2.treeDefaultExpandAll,treeDefaultExpandedKeys=_React$useContext2.treeDefaultExpandedKeys,onTreeExpand=_React$useContext2.onTreeExpand,treeIcon=_React$useContext2.treeIcon,showTreeIcon=_React$useContext2.showTreeIcon,switcherIcon=_React$useContext2.switcherIcon,treeLine=_React$useContext2.treeLine,treeNodeFilterProp=_React$useContext2.treeNodeFilterProp,loadData=_React$useContext2.loadData,treeLoadedKeys=_React$useContext2.treeLoadedKeys,treeMotion=_React$useContext2.treeMotion,onTreeLoad=_React$useContext2.onTreeLoad,keyEntities=_React$useContext2.keyEntities,treeRef=react.useRef(),memoTreeData=(0,useMemo.Z)((function(){return treeData}),[open,treeData],(function(prev,next){return next[0]&&prev[1]!==next[1]})),mergedCheckedKeys=react.useMemo((function(){return checkable?{checked:checkedKeys,halfChecked:halfCheckedKeys}:null}),[checkable,checkedKeys,halfCheckedKeys]);react.useEffect((function(){var _treeRef$current;open&&!multiple&&checkedKeys.length&&(null===(_treeRef$current=treeRef.current)||void 0===_treeRef$current||_treeRef$current.scrollTo({key:checkedKeys[0]}))}),[open]);var lowerSearchValue=String(searchValue).toLowerCase(),_React$useState=react.useState(treeDefaultExpandedKeys),_React$useState2=(0,slicedToArray.Z)(_React$useState,2),expandedKeys=_React$useState2[0],setExpandedKeys=_React$useState2[1],_React$useState3=react.useState(null),_React$useState4=(0,slicedToArray.Z)(_React$useState3,2),searchExpandedKeys=_React$useState4[0],setSearchExpandedKeys=_React$useState4[1],mergedExpandedKeys=react.useMemo((function(){return treeExpandedKeys?(0,toConsumableArray.Z)(treeExpandedKeys):searchValue?searchExpandedKeys:expandedKeys}),[expandedKeys,searchExpandedKeys,treeExpandedKeys,searchValue]);react.useEffect((function(){searchValue&&setSearchExpandedKeys(function getAllKeys(treeData,fieldNames){var keys=[];return function dig(list){list.forEach((function(item){keys.push(item[fieldNames.value]);var children=item[fieldNames.children];children&&dig(children)}))}(treeData),keys}(treeData,fieldNames))}),[searchValue]);var onListMouseDown=function onListMouseDown(event){event.preventDefault()},onInternalSelect=function onInternalSelect(__,info){var node=info.node;checkable&&isCheckDisabled(node)||(onSelect(node.key,{selected:!checkedKeys.includes(node.key)}),multiple||toggleOpen(!1))},_React$useState5=react.useState(null),_React$useState6=(0,slicedToArray.Z)(_React$useState5,2),activeKey=_React$useState6[0],setActiveKey=_React$useState6[1],activeEntity=keyEntities[activeKey];if(react.useImperativeHandle(ref,(function(){var _treeRef$current2;return{scrollTo:null===(_treeRef$current2=treeRef.current)||void 0===_treeRef$current2?void 0:_treeRef$current2.scrollTo,onKeyDown:function onKeyDown(event){var _treeRef$current3;switch(event.which){case KeyCode.Z.UP:case KeyCode.Z.DOWN:case KeyCode.Z.LEFT:case KeyCode.Z.RIGHT:null===(_treeRef$current3=treeRef.current)||void 0===_treeRef$current3||_treeRef$current3.onKeyDown(event);break;case KeyCode.Z.ENTER:if(activeEntity){var _ref=(null==activeEntity?void 0:activeEntity.node)||{},selectable=_ref.selectable,value=_ref.value;!1!==selectable&&onInternalSelect(0,{node:{key:activeKey},selected:!checkedKeys.includes(value)})}break;case KeyCode.Z.ESC:toggleOpen(!1)}},onKeyUp:function onKeyUp(){}}})),0===memoTreeData.length)return react.createElement("div",{role:"listbox",className:"".concat(prefixCls,"-empty"),onMouseDown:onListMouseDown},notFoundContent);var treeProps={fieldNames};return treeLoadedKeys&&(treeProps.loadedKeys=treeLoadedKeys),mergedExpandedKeys&&(treeProps.expandedKeys=mergedExpandedKeys),react.createElement("div",{onMouseDown:onListMouseDown},activeEntity&&open&&react.createElement("span",{style:HIDDEN_STYLE,"aria-live":"assertive"},activeEntity.node.value),react.createElement(rc_tree_es.default,(0,esm_extends.Z)({ref:treeRef,focusable:!1,prefixCls:"".concat(prefixCls,"-tree"),treeData:memoTreeData,height:listHeight,itemHeight:listItemHeight,virtual:!1!==virtual&&!1!==dropdownMatchSelectWidth,multiple,icon:treeIcon,showIcon:showTreeIcon,switcherIcon,showLine:treeLine,loadData:searchValue?null:loadData,motion:treeMotion,activeKey,checkable,checkStrictly:!0,checkedKeys:mergedCheckedKeys,selectedKeys:checkable?[]:checkedKeys,defaultExpandAll:treeDefaultExpandAll},treeProps,{onActiveChange:setActiveKey,onSelect:onInternalSelect,onCheck:onInternalSelect,onExpand:function onInternalExpand(keys){setExpandedKeys(keys),setSearchExpandedKeys(keys),onTreeExpand&&onTreeExpand(keys)},onLoad:onTreeLoad,filterTreeNode:function filterTreeNode(treeNode){return!!lowerSearchValue&&String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue)}})))},RefOptionList=react.forwardRef(OptionList);RefOptionList.displayName="OptionList";const es_OptionList=RefOptionList;const es_TreeNode=function TreeNode(){return null};var SHOW_ALL="SHOW_ALL",SHOW_PARENT="SHOW_PARENT",SHOW_CHILD="SHOW_CHILD";function formatStrategyValues(values,strategy,keyEntities,fieldNames){var valueSet=new Set(values);return strategy===SHOW_CHILD?values.filter((function(key){var entity=keyEntities[key];return!(entity&&entity.children&&entity.children.some((function(_ref){var node=_ref.node;return valueSet.has(node[fieldNames.value])}))&&entity.children.every((function(_ref2){var node=_ref2.node;return isCheckDisabled(node)||valueSet.has(node[fieldNames.value])})))})):strategy===SHOW_PARENT?values.filter((function(key){var entity=keyEntities[key],parent=entity?entity.parent:null;return!(parent&&!isCheckDisabled(parent.node)&&valueSet.has(parent.key))})):values}var Children_toArray=__webpack_require__("./node_modules/rc-util/es/Children/toArray.js"),es_warning=__webpack_require__("./node_modules/rc-util/es/warning.js"),_excluded=["children","value"];function convertChildrenToData(nodes){return(0,Children_toArray.Z)(nodes).map((function(node){if(!react.isValidElement(node)||!node.type)return null;var key=node.key,_node$props=node.props,children=_node$props.children,value=_node$props.value,restProps=(0,objectWithoutProperties.Z)(_node$props,_excluded),data=(0,objectSpread2.Z)({key,value},restProps),childData=convertChildrenToData(children);return childData.length&&(data.children=childData),data})).filter((function(data){return data}))}function fillLegacyProps(dataNode){if(!dataNode)return dataNode;var cloneNode=(0,objectSpread2.Z)({},dataNode);return"props"in cloneNode||Object.defineProperty(cloneNode,"props",{get:function get(){return(0,es_warning.ZP)(!1,"New `rc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access."),cloneNode}}),cloneNode}function useTreeData(treeData,children,simpleMode){return react.useMemo((function(){return treeData?simpleMode?function parseSimpleTreeData(treeData,_ref){var id=_ref.id,pId=_ref.pId,rootPId=_ref.rootPId,keyNodes={},rootNodeList=[];return treeData.map((function(node){var clone=(0,objectSpread2.Z)({},node),key=clone[id];return keyNodes[key]=clone,clone.key=clone.key||key,clone})).forEach((function(node){var parentKey=node[pId],parent=keyNodes[parentKey];parent&&(parent.children=parent.children||[],parent.children.push(node)),(parentKey===rootPId||!parent&&null===rootPId)&&rootNodeList.push(node)})),rootNodeList}(treeData,(0,objectSpread2.Z)({id:"id",pId:"pId",rootPId:null},!0!==simpleMode?simpleMode:{})):treeData:convertChildrenToData(children)}),[children,simpleMode,treeData])}function useRefFunc(callback){var funcRef=react.useRef();funcRef.current=callback;var cacheFn=react.useCallback((function(){return funcRef.current.apply(funcRef,arguments)}),[]);return cacheFn}var treeUtil=__webpack_require__("./node_modules/rc-tree/es/utils/treeUtil.js");var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");var TreeSelect_excluded=["id","prefixCls","value","defaultValue","onChange","onSelect","onDeselect","searchValue","inputValue","onSearch","autoClearSearchValue","filterTreeNode","treeNodeFilterProp","showCheckedStrategy","treeNodeLabelProp","multiple","treeCheckable","treeCheckStrictly","labelInValue","fieldNames","treeDataSimpleMode","treeData","children","loadData","treeLoadedKeys","onTreeLoad","treeDefaultExpandAll","treeExpandedKeys","treeDefaultExpandedKeys","onTreeExpand","virtual","listHeight","listItemHeight","onDropdownVisibleChange","dropdownMatchSelectWidth","treeLine","treeIcon","showTreeIcon","switcherIcon","treeMotion"];var GenericTreeSelect=react.forwardRef((function(props,ref){var id=props.id,_props$prefixCls=props.prefixCls,prefixCls=void 0===_props$prefixCls?"rc-tree-select":_props$prefixCls,value=props.value,defaultValue=props.defaultValue,onChange=props.onChange,onSelect=props.onSelect,onDeselect=props.onDeselect,searchValue=props.searchValue,inputValue=props.inputValue,onSearch=props.onSearch,_props$autoClearSearc=props.autoClearSearchValue,autoClearSearchValue=void 0===_props$autoClearSearc||_props$autoClearSearc,filterTreeNode=props.filterTreeNode,_props$treeNodeFilter=props.treeNodeFilterProp,treeNodeFilterProp=void 0===_props$treeNodeFilter?"value":_props$treeNodeFilter,_props$showCheckedStr=props.showCheckedStrategy,showCheckedStrategy=void 0===_props$showCheckedStr?SHOW_CHILD:_props$showCheckedStr,treeNodeLabelProp=props.treeNodeLabelProp,multiple=props.multiple,treeCheckable=props.treeCheckable,treeCheckStrictly=props.treeCheckStrictly,labelInValue=props.labelInValue,fieldNames=props.fieldNames,treeDataSimpleMode=props.treeDataSimpleMode,treeData=props.treeData,children=props.children,loadData=props.loadData,treeLoadedKeys=props.treeLoadedKeys,onTreeLoad=props.onTreeLoad,treeDefaultExpandAll=props.treeDefaultExpandAll,treeExpandedKeys=props.treeExpandedKeys,treeDefaultExpandedKeys=props.treeDefaultExpandedKeys,onTreeExpand=props.onTreeExpand,virtual=props.virtual,_props$listHeight=props.listHeight,listHeight=void 0===_props$listHeight?200:_props$listHeight,_props$listItemHeight=props.listItemHeight,listItemHeight=void 0===_props$listItemHeight?20:_props$listItemHeight,onDropdownVisibleChange=props.onDropdownVisibleChange,_props$dropdownMatchS=props.dropdownMatchSelectWidth,dropdownMatchSelectWidth=void 0===_props$dropdownMatchS||_props$dropdownMatchS,treeLine=props.treeLine,treeIcon=props.treeIcon,showTreeIcon=props.showTreeIcon,switcherIcon=props.switcherIcon,treeMotion=props.treeMotion,restProps=(0,objectWithoutProperties.Z)(props,TreeSelect_excluded),mergedId=(0,useId.ZP)(id),treeConduction=treeCheckable&&!treeCheckStrictly,mergedCheckable=treeCheckable||treeCheckStrictly,mergedLabelInValue=treeCheckStrictly||labelInValue,mergedMultiple=mergedCheckable||multiple;var values,cacheRef,mergedFieldNames=react.useMemo((function(){return function fillFieldNames(fieldNames){var _ref=fieldNames||{},label=_ref.label,mergedValue=_ref.value||"value";return{_title:label?[label]:["title","label"],value:mergedValue,key:mergedValue,children:_ref.children||"children"}}(fieldNames)}),[JSON.stringify(fieldNames)]),_useMergedState=(0,useMergedState.Z)("",{value:void 0!==searchValue?searchValue:inputValue,postState:function postState(search){return search||""}}),_useMergedState2=(0,slicedToArray.Z)(_useMergedState,2),mergedSearchValue=_useMergedState2[0],setSearchValue=_useMergedState2[1],mergedTreeData=useTreeData(treeData,children,treeDataSimpleMode),_useDataEntities=function(treeData,fieldNames){return react.useMemo((function(){return(0,treeUtil.I8)(treeData,{fieldNames,initWrapper:function initWrapper(wrapper){return(0,objectSpread2.Z)((0,objectSpread2.Z)({},wrapper),{},{valueEntities:new Map})},processEntity:function processEntity(entity,wrapper){var val=entity.node[fieldNames.value];wrapper.valueEntities.set(val,entity)}})}),[treeData,fieldNames])}(mergedTreeData,mergedFieldNames),keyEntities=_useDataEntities.keyEntities,valueEntities=_useDataEntities.valueEntities,splitRawValues=react.useCallback((function(newRawValues){var missingRawValues=[],existRawValues=[];return newRawValues.forEach((function(val){valueEntities.has(val)?existRawValues.push(val):missingRawValues.push(val)})),{missingRawValues,existRawValues}}),[valueEntities]),filteredTreeData=function(treeData,searchValue,_ref){var treeNodeFilterProp=_ref.treeNodeFilterProp,filterTreeNode=_ref.filterTreeNode,fieldChildren=_ref.fieldNames.children;return react.useMemo((function(){if(!searchValue||!1===filterTreeNode)return treeData;var filterOptionFunc;if("function"==typeof filterTreeNode)filterOptionFunc=filterTreeNode;else{var upperStr=searchValue.toUpperCase();filterOptionFunc=function filterOptionFunc(_,dataNode){var value=dataNode[treeNodeFilterProp];return String(value).toUpperCase().includes(upperStr)}}return function dig(list){var keepAll=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return list.map((function(dataNode){var children=dataNode[fieldChildren],match=keepAll||filterOptionFunc(searchValue,fillLegacyProps(dataNode)),childList=dig(children||[],match);return match||childList.length?(0,objectSpread2.Z)((0,objectSpread2.Z)({},dataNode),{},(0,defineProperty.Z)({},fieldChildren,childList)):null})).filter((function(node){return node}))}(treeData)}),[treeData,searchValue,fieldChildren,treeNodeFilterProp,filterTreeNode])}(mergedTreeData,mergedSearchValue,{fieldNames:mergedFieldNames,treeNodeFilterProp,filterTreeNode}),getLabel=react.useCallback((function(item){if(item){if(treeNodeLabelProp)return item[treeNodeLabelProp];for(var titleList=mergedFieldNames._title,i=0;i<titleList.length;i+=1){var title=item[titleList[i]];if(void 0!==title)return title}}}),[mergedFieldNames,treeNodeLabelProp]),toLabeledValues=react.useCallback((function(draftValues){var values=function valueUtil_toArray(value){return Array.isArray(value)?value:void 0!==value?[value]:[]}(draftValues);return values.map((function(val){return function isRawValue(value){return!value||"object"!==(0,esm_typeof.Z)(value)}(val)?{value:val}:val}))}),[]),convert2LabelValues=react.useCallback((function(draftValues){return toLabeledValues(draftValues).map((function(item){var rawDisabled,_rawLabel,rawLabel=item.label,rawValue=item.value,rawHalfChecked=item.halfChecked,entity=valueEntities.get(rawValue);entity&&(rawLabel=null!==(_rawLabel=rawLabel)&&void 0!==_rawLabel?_rawLabel:getLabel(entity.node),rawDisabled=entity.node.disabled);return{label:rawLabel,value:rawValue,halfChecked:rawHalfChecked,disabled:rawDisabled}}))}),[valueEntities,getLabel,toLabeledValues]),_useMergedState3=(0,useMergedState.Z)(defaultValue,{value}),_useMergedState4=(0,slicedToArray.Z)(_useMergedState3,2),internalValue=_useMergedState4[0],setInternalValue=_useMergedState4[1],rawMixedLabeledValues=react.useMemo((function(){return toLabeledValues(internalValue)}),[toLabeledValues,internalValue]),_React$useMemo=react.useMemo((function(){var fullCheckValues=[],halfCheckValues=[];return rawMixedLabeledValues.forEach((function(item){item.halfChecked?halfCheckValues.push(item):fullCheckValues.push(item)})),[fullCheckValues,halfCheckValues]}),[rawMixedLabeledValues]),_React$useMemo2=(0,slicedToArray.Z)(_React$useMemo,2),rawLabeledValues=_React$useMemo2[0],rawHalfLabeledValues=_React$useMemo2[1],rawValues=react.useMemo((function(){return rawLabeledValues.map((function(item){return item.value}))}),[rawLabeledValues]),_useCheckedKeys=function(rawLabeledValues,rawHalfCheckedValues,treeConduction,keyEntities){return react.useMemo((function(){var checkedKeys=rawLabeledValues.map((function(_ref){return _ref.value})),halfCheckedKeys=rawHalfCheckedValues.map((function(_ref2){return _ref2.value})),missingValues=checkedKeys.filter((function(key){return!keyEntities[key]}));if(treeConduction){var _conductCheck=(0,conductUtil.S)(checkedKeys,!0,keyEntities);checkedKeys=_conductCheck.checkedKeys,halfCheckedKeys=_conductCheck.halfCheckedKeys}return[Array.from(new Set([].concat((0,toConsumableArray.Z)(missingValues),(0,toConsumableArray.Z)(checkedKeys)))),halfCheckedKeys]}),[rawLabeledValues,rawHalfCheckedValues,treeConduction,keyEntities])}(rawLabeledValues,rawHalfLabeledValues,treeConduction,keyEntities),_useCheckedKeys2=(0,slicedToArray.Z)(_useCheckedKeys,2),rawCheckedValues=_useCheckedKeys2[0],rawHalfCheckedValues=_useCheckedKeys2[1],displayValues=react.useMemo((function(){var labeledValues=formatStrategyValues(rawCheckedValues,showCheckedStrategy,keyEntities,mergedFieldNames).map((function(key){var _keyEntities$key$node,_keyEntities$key,_keyEntities$key$node2;return null!==(_keyEntities$key$node=null===(_keyEntities$key=keyEntities[key])||void 0===_keyEntities$key||null===(_keyEntities$key$node2=_keyEntities$key.node)||void 0===_keyEntities$key$node2?void 0:_keyEntities$key$node2[mergedFieldNames.value])&&void 0!==_keyEntities$key$node?_keyEntities$key$node:key})).map((function(val){var targetItem=rawLabeledValues.find((function(item){return item.value===val}));return{value:val,label:null==targetItem?void 0:targetItem.label}})),rawDisplayValues=convert2LabelValues(labeledValues),firstVal=rawDisplayValues[0];return!mergedMultiple&&firstVal&&isNil(firstVal.value)&&isNil(firstVal.label)?[]:rawDisplayValues.map((function(item){var _item$label;return(0,objectSpread2.Z)((0,objectSpread2.Z)({},item),{},{label:null!==(_item$label=item.label)&&void 0!==_item$label?_item$label:item.value})}))}),[mergedFieldNames,mergedMultiple,rawCheckedValues,rawLabeledValues,convert2LabelValues,showCheckedStrategy,keyEntities]),_useCache=(values=displayValues,cacheRef=react.useRef({valueLabels:new Map}),react.useMemo((function(){var valueLabels=cacheRef.current.valueLabels,valueLabelsCache=new Map,filledValues=values.map((function(item){var _item$label,value=item.value,mergedLabel=null!==(_item$label=item.label)&&void 0!==_item$label?_item$label:valueLabels.get(value);return valueLabelsCache.set(value,mergedLabel),(0,objectSpread2.Z)((0,objectSpread2.Z)({},item),{},{label:mergedLabel})}));return cacheRef.current.valueLabels=valueLabelsCache,[filledValues]}),[values])),cachedDisplayValues=(0,slicedToArray.Z)(_useCache,1)[0],triggerChange=useRefFunc((function(newRawValues,extra,source){var labeledValues=convert2LabelValues(newRawValues);if(setInternalValue(labeledValues),autoClearSearchValue&&setSearchValue(""),onChange){var eventValues=newRawValues;if(treeConduction){var formattedKeyList=formatStrategyValues(newRawValues,showCheckedStrategy,keyEntities,mergedFieldNames);eventValues=formattedKeyList.map((function(key){var entity=valueEntities.get(key);return entity?entity.node[mergedFieldNames.value]:key}))}var _ref=extra||{triggerValue:void 0,selected:void 0},triggerValue=_ref.triggerValue,selected=_ref.selected,returnRawValues=eventValues;if(treeCheckStrictly){var halfValues=rawHalfLabeledValues.filter((function(item){return!eventValues.includes(item.value)}));returnRawValues=[].concat((0,toConsumableArray.Z)(returnRawValues),(0,toConsumableArray.Z)(halfValues))}var returnLabeledValues=convert2LabelValues(returnRawValues),additionalInfo={preValue:rawLabeledValues,triggerValue},showPosition=!0;(treeCheckStrictly||"selection"===source&&!selected)&&(showPosition=!1),function fillAdditionalInfo(extra,triggerValue,checkedValues,treeData,showPosition,fieldNames){var triggerNode=null,nodeList=null;function generateMap(){nodeList||(nodeList=[],function dig(list){var level=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"0",parentIncluded=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return list.map((function(option,index){var pos="".concat(level,"-").concat(index),value=option[fieldNames.value],included=checkedValues.includes(value),children=dig(option[fieldNames.children]||[],pos,included),node=react.createElement(es_TreeNode,option,children.map((function(child){return child.node})));if(triggerValue===value&&(triggerNode=node),included){var checkedNode={pos,node,children};return parentIncluded||nodeList.push(checkedNode),checkedNode}return null})).filter((function(node){return node}))}(treeData),nodeList.sort((function(_ref,_ref2){var val1=_ref.node.props.value,val2=_ref2.node.props.value;return checkedValues.indexOf(val1)-checkedValues.indexOf(val2)})))}Object.defineProperty(extra,"triggerNode",{get:function get(){return(0,es_warning.ZP)(!1,"`triggerNode` is deprecated. Please consider decoupling data with node."),generateMap(),triggerNode}}),Object.defineProperty(extra,"allCheckedNodes",{get:function get(){return(0,es_warning.ZP)(!1,"`allCheckedNodes` is deprecated. Please consider decoupling data with node."),generateMap(),showPosition?nodeList:nodeList.map((function(_ref3){return _ref3.node}))}})}(additionalInfo,triggerValue,newRawValues,mergedTreeData,showPosition,mergedFieldNames),mergedCheckable?additionalInfo.checked=selected:additionalInfo.selected=selected;var returnValues=mergedLabelInValue?returnLabeledValues:returnLabeledValues.map((function(item){return item.value}));onChange(mergedMultiple?returnValues:returnValues[0],mergedLabelInValue?null:returnLabeledValues.map((function(item){return item.label})),additionalInfo)}})),onOptionSelect=react.useCallback((function(selectedKey,_ref2){var _node$mergedFieldName,selected=_ref2.selected,source=_ref2.source,entity=keyEntities[selectedKey],node=null==entity?void 0:entity.node,selectedValue=null!==(_node$mergedFieldName=null==node?void 0:node[mergedFieldNames.value])&&void 0!==_node$mergedFieldName?_node$mergedFieldName:selectedKey;if(mergedMultiple){var newRawValues=selected?[].concat((0,toConsumableArray.Z)(rawValues),[selectedValue]):rawCheckedValues.filter((function(v){return v!==selectedValue}));if(treeConduction){var checkedKeys,_splitRawValues=splitRawValues(newRawValues),missingRawValues=_splitRawValues.missingRawValues,keyList=_splitRawValues.existRawValues.map((function(val){return valueEntities.get(val).key}));if(selected)checkedKeys=(0,conductUtil.S)(keyList,!0,keyEntities).checkedKeys;else checkedKeys=(0,conductUtil.S)(keyList,{checked:!1,halfCheckedKeys:rawHalfCheckedValues},keyEntities).checkedKeys;newRawValues=[].concat((0,toConsumableArray.Z)(missingRawValues),(0,toConsumableArray.Z)(checkedKeys.map((function(key){return keyEntities[key].node[mergedFieldNames.value]}))))}triggerChange(newRawValues,{selected,triggerValue:selectedValue},source||"option")}else triggerChange([selectedValue],{selected:!0,triggerValue:selectedValue},"option");selected||!mergedMultiple?null==onSelect||onSelect(selectedValue,fillLegacyProps(node)):null==onDeselect||onDeselect(selectedValue,fillLegacyProps(node))}),[splitRawValues,valueEntities,keyEntities,mergedFieldNames,mergedMultiple,rawValues,triggerChange,treeConduction,onSelect,onDeselect,rawCheckedValues,rawHalfCheckedValues]),onInternalDropdownVisibleChange=react.useCallback((function(open){if(onDropdownVisibleChange){var legacyParam={};Object.defineProperty(legacyParam,"documentClickClose",{get:function get(){return(0,es_warning.ZP)(!1,"Second param of `onDropdownVisibleChange` has been removed."),!1}}),onDropdownVisibleChange(open,legacyParam)}}),[onDropdownVisibleChange]),onDisplayValuesChange=useRefFunc((function(newValues,info){var newRawValues=newValues.map((function(item){return item.value}));"clear"!==info.type?info.values.length&&onOptionSelect(info.values[0].value,{selected:!1,source:"selection"}):triggerChange(newRawValues,{},"selection")})),treeSelectContext=react.useMemo((function(){return{virtual,dropdownMatchSelectWidth,listHeight,listItemHeight,treeData:filteredTreeData,fieldNames:mergedFieldNames,onSelect:onOptionSelect}}),[virtual,dropdownMatchSelectWidth,listHeight,listItemHeight,filteredTreeData,mergedFieldNames,onOptionSelect]),legacyContext=react.useMemo((function(){return{checkable:mergedCheckable,loadData,treeLoadedKeys,onTreeLoad,checkedKeys:rawCheckedValues,halfCheckedKeys:rawHalfCheckedValues,treeDefaultExpandAll,treeExpandedKeys,treeDefaultExpandedKeys,onTreeExpand,treeIcon,treeMotion,showTreeIcon,switcherIcon,treeLine,treeNodeFilterProp,keyEntities}}),[mergedCheckable,loadData,treeLoadedKeys,onTreeLoad,rawCheckedValues,rawHalfCheckedValues,treeDefaultExpandAll,treeExpandedKeys,treeDefaultExpandedKeys,onTreeExpand,treeIcon,treeMotion,showTreeIcon,switcherIcon,treeLine,treeNodeFilterProp,keyEntities]);return react.createElement(es_TreeSelectContext.Provider,{value:treeSelectContext},react.createElement(LegacyContext.Provider,{value:legacyContext},react.createElement(es.BaseSelect,(0,esm_extends.Z)({ref},restProps,{id:mergedId,prefixCls,mode:mergedMultiple?"multiple":void 0,displayValues:cachedDisplayValues,onDisplayValuesChange,searchValue:mergedSearchValue,onSearch:function onInternalSearch(searchText){setSearchValue(searchText),null==onSearch||onSearch(searchText)},OptionList:es_OptionList,emptyOptions:!mergedTreeData.length,onDropdownVisibleChange:onInternalDropdownVisibleChange,dropdownMatchSelectWidth}))))}));GenericTreeSelect.TreeNode=es_TreeNode,GenericTreeSelect.SHOW_ALL=SHOW_ALL,GenericTreeSelect.SHOW_PARENT=SHOW_PARENT,GenericTreeSelect.SHOW_CHILD=SHOW_CHILD;const rc_tree_select_es=GenericTreeSelect}}]);